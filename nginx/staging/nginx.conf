upstream backend {
    server backend:5005;
}

server
{
    listen 80;
    server_name staging.laer.ai;

    return 301 https://staging.laer.ai$request_uri;
}

server
{
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name staging.laer.ai;
    server_tokens off;

    proxy_set_header host $host;
    proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
    proxy_set_header x-real-ip $remote_addr;
    proxy_set_header x-forwarded-proto $scheme;

    client_max_body_size 20M;

    ssl_certificate /etc/ssl/laerai.crt;
    ssl_certificate_key /etc/ssl/laerai.key;

    ssl_protocols TLSv1.2 TLSv1.3;# Requires nginx >= 1.13.0 else use TLSv1.2
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/nginx/dhparam.pem; # openssl dhparam -out /etc/nginx/dhparam.pem 4096
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
#     ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_timeout  10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off; # Requires nginx >= 1.5.9

    add_header Content-Security-Policy "base-uri 'self'; default-src 'self' blob:; img-src * data:; worker-src 'self' blob:; child-src blob: gap:; object-src 'self' blob:; frame-src 'self' app.hubspot.com forms.hsforms.com blob:; connect-src 'self' https://sentry.laer.ai/ https://www.google-analytics.com/ https://api.hubspot.com https://forms.hscollectedforms.net https://forms.hubspot.com https://forms.hsforms.com https://hubspot-forms-static-embed.s3.amazonaws.com blob:; script-src 'self' www.googletagmanager.com js-na1.hs-scripts.com js.hs-banner.com js.hscollectedforms.net js.usemessages.com js.hs-analytics.net js.hsforms.net 'unsafe-inline'; font-src * 'unsafe-inline' data:; style-src 'self' cdn.jsdelivr.net fonts.googleapis.com fonts.cdnfonts.com 'unsafe-inline'";
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy strict-origin-when-cross-origin;
    add_header Cross-Origin-Opener-Policy same-origin;
    add_header Permissions-Policy "geolocation=()";

	location / {
	   root /app/staging;
# 	   add_header Access-Control-Allow-Origin *;
       try_files $uri $uri/ /index.html =404;
	}

    location /api/v1 {
       proxy_pass http://backend;
    }

    location /resources {
        root /;
        default_type application/pdf;
        add_header Content-Disposition 'inline';
    }

    access_log /var/log/nginx/nginx-access.log;
}
